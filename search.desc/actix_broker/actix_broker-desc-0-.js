searchState.loadedDescShard("actix_broker", 0, "A message broker for the Actix actor framework.\nThe <code>BrokerIssue</code> provides functions to issue messages to …\nThe <code>BrokerSubscribe</code> trait has functions to register an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelper to asynchronously issue to an arbiter-specific …\nHelper to asynchronously issue to an arbiter-specific …\nHelper to synchronously issue to an arbiter-specific broker\nHelper to synchronously issue to an arbiter-specific broker\nAsynchronously issue a message. This bypasses the mailbox …\nAsynchronously issue a message. This bypasses the mailbox …\nSend messages asynchronously via the broker. It can be …\nSend messages asynchronously via the broker. It can be …\nSynchronously issue a message. This also causes the broker …\nSynchronously issue a message. This also causes the broker …\nHelper to asynchronously issue to an system broker This is …\nHelper to asynchronously issue to an system broker This is …\nHelper to synchronously issue to an system broker This is …\nHelper to synchronously issue to an system broker This is …\nHelper to asynchronously subscribe to an arbiter-specific …\nHelper to asynchronously subscribe to an arbiter-specific …\nHelper to synchronously subscribe to an arbiter-specific …\nHelper to synchronously subscribe to an arbiter-specific …\nAsynchronously subscribe to a message.\nAsynchronously subscribe to a message.\nSynchronously subscribe to a message. This actor will do …\nSynchronously subscribe to a message. This actor will do …\nHelper to asynchronously subscribe to a system broker This …\nHelper to asynchronously subscribe to a system broker This …\nHelper to synchronously subscribe to a system broker This …\nHelper to synchronously subscribe to a system broker This …")