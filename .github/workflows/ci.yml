name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [master]

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { name: Linux, os: ubuntu-latest, triple: x86_64-unknown-linux-gnu }
          - { name: macOS, os: macos-latest, triple: x86_64-apple-darwin }
          - { name: Windows, os: windows-latest, triple: x86_64-pc-windows-msvc }
        version:
          - 1.57.0 # MSRV
          - stable

    name: ${{ matrix.target.name }} / ${{ matrix.version }}
    runs-on: ${{ matrix.target.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install ${{ matrix.version }}
        run: |
          rustup set profile minimal
          rustup install ${{ matrix.version }}-${{ matrix.target.triple }}
          rustup override set ${{ matrix.version }}-${{ matrix.target.triple }}

      - name: Install cargo-hack
        uses: taiki-e/install-action@cargo-hack

      - name: Generate Cargo.lock
        run: cargo generate-lockfile
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2.2.0

      - name: check minimal
        run: cargo hack --clean-per-run check --workspace --no-default-features

      - name: tests
        run: cargo test -v --workspace --all-features --no-fail-fast -- --nocapture

      # disable coverage for now
      # - name: Generate coverage file
      #   if: >
      #     matrix.target.os == 'ubuntu-latest'
      #     && matrix.version == 'stable'
      #     && github.ref == 'refs/heads/master'
      #   run: |
      #     cargo install cargo-tarpaulin --vers "^0.13"
      #     cargo tarpaulin --out Xml --verbose
      # - name: Upload to Codecov
      #   if: >
      #     matrix.target.os == 'ubuntu-latest'
      #     && matrix.version == 'stable'
      #     && github.ref == 'refs/heads/master'
      #   uses: codecov/codecov-action@v1
      #   with:
      #     file: cobertura.xml

      - name: Clear the cargo caches
        run: |
          rustup override set stable
          cargo install cargo-cache --version 0.8.3 --no-default-features --features ci-autoclean
          cargo-cache
